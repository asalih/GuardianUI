// <auto-generated />
using System;
using Guardian.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Guardian.Infrastructure.Migrations
{
    [DbContext(typeof(GuardianDataContext))]
    [Migration("20190919213639_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Guardian.Infrastructure.Entity.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<string>("Email")
                        .HasMaxLength(200);

                    b.Property<string>("FullName")
                        .HasMaxLength(50);

                    b.Property<string>("Password");

                    b.Property<string>("Role");

                    b.Property<string>("Salt");

                    b.HasKey("Id");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("Guardian.Infrastructure.Entity.FirewallRule", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("AccountId");

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<string>("Expression");

                    b.Property<bool>("IsActive");

                    b.Property<Guid>("TargetId");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("FirewallRules");
                });

            modelBuilder.Entity("Guardian.Infrastructure.Entity.RuleLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<string>("Description");

                    b.Property<int>("ExecutionMillisecond");

                    b.Property<Guid?>("FirewallRuleId");

                    b.Property<bool>("IsHitted");

                    b.Property<int>("LogType");

                    b.HasKey("Id");

                    b.HasIndex("FirewallRuleId");

                    b.ToTable("RuleLogs");
                });

            modelBuilder.Entity("Guardian.Infrastructure.Entity.Target", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("AccountId");

                    b.Property<string>("CertCrt");

                    b.Property<string>("CertKey");

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<string>("Domain")
                        .HasMaxLength(250);

                    b.Property<string>("OriginIpAddress")
                        .HasMaxLength(250);

                    b.Property<bool>("UseHttps");

                    b.Property<bool>("WAFEnabled");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("Domain")
                        .IsUnique();

                    b.ToTable("Targets");
                });

            modelBuilder.Entity("Guardian.Infrastructure.Entity.RuleLog", b =>
                {
                    b.HasOne("Guardian.Infrastructure.Entity.FirewallRule", "WafRule")
                        .WithMany()
                        .HasForeignKey("FirewallRuleId");
                });

            modelBuilder.Entity("Guardian.Infrastructure.Entity.Target", b =>
                {
                    b.HasOne("Guardian.Infrastructure.Entity.Account", "Account")
                        .WithMany("Targets")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
