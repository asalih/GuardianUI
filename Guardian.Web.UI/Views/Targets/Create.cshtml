@model Guardian.Domain.Target.TargetDto

@{
    ViewData["Title"] = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Create Target</h1>
<hr />
<div class="row">
    <div class="col-md-8">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Domain" class="control-label"></label>
                <input asp-for="Domain" class="form-control" />
                <span asp-validation-for="Domain" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <input asp-for="AutoCert" class="form-check-input" />
                <label asp-for="AutoCert" class="form-check-label"></label>
                <label class="text-info font-italic"> * Auto certification handled with Let's Encrypt.</label>
                <span asp-validation-for="AutoCert" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <input asp-for="CreateSelfSignedCertificate" class="form-check-input" />
                <label asp-for="CreateSelfSignedCertificate" class="form-check-label"></label>
                <span asp-validation-for="CreateSelfSignedCertificate" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <div class="alert alert-info">
                    You can also use your own certificate. Once you have added your domain, you can manage the certificate in the edit page.
                </div>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

